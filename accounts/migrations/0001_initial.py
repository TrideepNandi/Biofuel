# Generated by Django 4.0 on 2024-05-23 18:35

import accounts.helper
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters and numbers only.', max_length=150, unique=True, validators=[accounts.helper.CustomsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-Mail Address')),
                ('phone', models.CharField(blank=True, max_length=252, null=True)),
                ('orgonization', models.CharField(max_length=252, verbose_name='Organization')),
                ('term_agree', models.BooleanField()),
                ('email_verified', models.BooleanField(default=False)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=True, help_text='If true profile data visible to logged in other users of the platform.', verbose_name='Profile is Public')),
            ],
            options={
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UsersNextActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252)),
                ('slug', models.SlugField(unique=True)),
                ('icon', models.ImageField(upload_to='usertype/')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_producer', models.BooleanField(default=False)),
                ('is_expert', models.BooleanField(default=False)),
                ('is_consumer', models.BooleanField(default=False)),
                ('is_marine', models.BooleanField(default=False)),
                ('sort_order', models.IntegerField(default=1)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['sort_order'],
                'permissions': (('can_access_usertype', 'Can access usertype'),),
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='notificationsettings', serialize=False, to='accounts.user')),
                ('marketing_mail', models.BooleanField(default=True)),
                ('new_fuel_notifications', models.BooleanField(default=True)),
                ('blog_notifications', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
                ('company_logo', models.ImageField(blank=True, upload_to='company_logo')),
                ('about', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('established', models.DateField(blank=True, null=True)),
            ],
        ),
    ]
