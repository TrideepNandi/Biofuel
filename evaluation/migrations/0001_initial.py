# Generated by Django 4.0 on 2024-05-23 18:35

from django.db import migrations, models
import django.db.models.deletion
import evaluation.models
import smart_selects.db_fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Biofuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252)),
            ],
        ),
        migrations.CreateModel(
            name='DifinedLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252)),
                ('label', models.CharField(default='', max_length=252)),
                ('adj', models.CharField(default='', max_length=252)),
                ('common_status', models.BooleanField(default=False, validators=[evaluation.models.get_common_status])),
                ('sort_order', models.CharField(default=0, max_length=3)),
            ],
            options={
                'verbose_name': 'Defined Label',
                'verbose_name_plural': 'Defined Labels',
            },
        ),
        migrations.CreateModel(
            name='EvaComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='EvaLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.CharField(default=0, max_length=3)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EvaLebelStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_id', models.CharField(blank=True, max_length=252, null=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('next_step', models.TextField(blank=True, null=True)),
                ('positive', models.CharField(db_index=True, default=0, max_length=1)),
                ('dont_know', models.BooleanField(db_index=True, default=False)),
                ('assesment', models.BooleanField(default=False)),
                ('next_activity', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Eva Label Statement',
                'verbose_name_plural': 'Eva Label Statements',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Evaluator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=252)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(blank=True, max_length=16, null=True)),
                ('orgonization', models.CharField(blank=True, max_length=252, null=True)),
                ('stdoil_key', models.CharField(blank=True, db_index=True, max_length=20, null=True)),
                ('make_it_public', models.BooleanField(default=True, help_text='By default it is public! If not tick marked it will not be visible to the site!')),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('report_genarated', models.BooleanField(default=False)),
                ('feedback_updated', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
            },
        ),
        migrations.CreateModel(
            name='EvaluatorActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_percent', models.IntegerField()),
                ('compulsory_percent', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default=0, max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='LabelDataHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('items', models.TextField(max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'verbose_name': 'Label Data History',
                'verbose_name_plural': 'Label Data Histories',
            },
        ),
        migrations.CreateModel(
            name='LogicalString',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('overall', models.CharField(db_index=True, default=0, max_length=1)),
                ('positive', models.CharField(db_index=True, default=0, max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Lslabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(default=0, max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='NextActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_and_standared', models.CharField(max_length=250)),
                ('short_description', models.TextField(max_length=152)),
                ('descriptions', models.TextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('priority', models.CharField(help_text='To specify sort order!', max_length=2)),
                ('related_percent', models.IntegerField(default=90)),
                ('compulsory_percent', models.IntegerField(default=100)),
                ('is_active', models.BooleanField(default=True, help_text='Tick will published the service directly to the site!', verbose_name='Published?')),
                ('same_tried_by', models.JSONField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Next Activity',
                'verbose_name_plural': 'Next Activities',
            },
        ),
        migrations.CreateModel(
            name='OliList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('key', models.CharField(blank=True, editable=False, max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Defined Oil',
                'verbose_name_plural': 'Defined Oils',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=252)),
                ('yes_status', models.BooleanField(db_index=True, default=False)),
                ('dont_know', models.BooleanField(db_index=True, default=False)),
                ('statement', models.TextField(blank=True, null=True)),
                ('next_step', models.TextField(blank=True, null=True)),
                ('overall', models.CharField(db_index=True, default=0, max_length=1)),
                ('positive', models.CharField(db_index=True, default=0, max_length=1)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OptionSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_list', models.CharField(db_index=True, max_length=252, unique=True)),
                ('text', models.TextField()),
                ('positive', models.CharField(db_index=True, default=0, max_length=1)),
                ('overall', models.CharField(db_index=True, default=0, max_length=1)),
                ('ls_id', models.CharField(default=0, max_length=252)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.CharField(db_index=True, default=evaluation.models.generate_uuid, editable=False, max_length=40, unique=True)),
                ('name', models.CharField(max_length=252)),
                ('chapter_name', models.CharField(blank=True, max_length=252, null=True)),
                ('sort_order', models.IntegerField(default=1)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('is_door', models.BooleanField(db_index=True, default=False)),
                ('chart_title', models.CharField(blank=True, max_length=252, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
            },
        ),
        migrations.CreateModel(
            name='ReportMailQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to', models.CharField(blank=True, max_length=256, null=True)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('process_time', models.DateTimeField(auto_now=True)),
                ('tried', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Youtube_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.TextField()),
                ('urls', models.TextField()),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('su_type', models.CharField(choices=[('question', 'Question'), ('option', 'Option')], default='question', max_length=10)),
                ('title', models.CharField(max_length=252)),
                ('statement', models.TextField()),
                ('comitted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='evaluation.suggestions')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='question_sugestion', to='evaluation.question')),
                ('related_qs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related', to='evaluation.suggestions')),
                ('sugested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sugestions', to='accounts.user')),
            ],
            options={
                'verbose_name': 'Suggestion',
            },
        ),
        migrations.CreateModel(
            name='StdOils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biofuel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='evaluation.biofuel')),
                ('select_oil', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='evaluation.olilist')),
            ],
            options={
                'verbose_name': 'Standard Oil',
                'verbose_name_plural': 'Standard Oils',
            },
        ),
        migrations.CreateModel(
            name='StandaredChart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=252, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('oil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='std_oil_of_chart', to='evaluation.stdoils')),
                ('option', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field='question', chained_model_field='question', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stoption', to='evaluation.option')),
                ('question', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='stanchart', to='evaluation.question')),
            ],
            options={
                'verbose_name': 'Standard Chart',
                'verbose_name_plural': 'Standard Charts',
            },
        ),
    ]
