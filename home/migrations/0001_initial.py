# Generated by Django 4.0 on 2024-05-23 18:35

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('evaluation', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='QuotationDocType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=152)),
            ],
        ),
        migrations.CreateModel(
            name='TimeUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='WeightUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_alternate_email', models.EmailField(blank=True, help_text='You can show alternate email address in quotation.', max_length=254, null=True)),
                ('show_alternate_business', models.CharField(blank=True, help_text='You can show alternate email address in quotation.', max_length=50, null=True)),
                ('show_alternate_phone', models.CharField(blank=True, help_text='You can show alternate phone number in quotation.', max_length=50, null=True)),
                ('price', models.DecimalField(decimal_places=2, help_text='Write the proper price and remember to choose the appropriate pricing unit from the options next to the price box.', max_digits=10, verbose_name='Quotation Price')),
                ('needy_time', models.IntegerField(help_text='Write the proper needy time to conduct the test and remember to choose the appropriate time unit from the options next to the needy time box.', verbose_name='Total needed time for the test')),
                ('sample_amount', models.IntegerField(help_text='Note how much sample you need to perform this test. Do not forget to select the unit of weight.', verbose_name='Sample amount needed for test')),
                ('factory_pickup', models.BooleanField(help_text='Place a tick mark to indicate whether the sample will be collected from the factory.', verbose_name='Factory Sample pick-up')),
                ('quotation_format', models.FileField(help_text="Only '.pdf' are allowed", upload_to='quotation', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Upload Quotation (pdf)')),
                ('display_site_address', models.BooleanField(default=True, help_text='Tick will display system address IO Validation partner address', verbose_name='Display Site Address')),
                ('comments', models.TextField(blank=True, help_text='This field will take charecter upto 500', max_length=500, null=True)),
                ('needy_time_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeunitquatation', to='home.timeunit', verbose_name='Time Unit')),
                ('next_activities', models.ForeignKey(blank=True, help_text='Select next activities to select related questions from next activities', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='quotnextactivity', to='evaluation.nextactivities')),
                ('price_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='priceunitquatation', to='home.priceunit', verbose_name='Price Unit')),
                ('related_questions', models.ManyToManyField(db_index=True, help_text='Allow multiple option selection. The selected options should be highlighted.', limit_choices_to={'is_active': True, 'is_door': False}, related_name='quotations_related_questions', to='evaluation.Question', verbose_name='Please select all other question which are also tested within the provided quotation')),
                ('require_documents', models.ManyToManyField(help_text='Select the documents that are needed to perform this test. You can select multiple in mac by holding shift + command and down arrow and in windows ctrl/shift + down arrow.', related_name='requiredocuments', to='home.QuotationDocType', verbose_name='Document needed for test')),
                ('sample_amount_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weightunitquatation', to='home.weightunit', verbose_name='Weight Unit')),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotationserviceprovider', to='accounts.user')),
                ('test_for', models.ForeignKey(help_text='Help Text will go here', limit_choices_to={'is_active': True, 'is_door': False}, max_length=252, on_delete=django.db.models.deletion.CASCADE, related_name='testfor', to='evaluation.question', verbose_name='Tests for question')),
            ],
        ),
    ]
